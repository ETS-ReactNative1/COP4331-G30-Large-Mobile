{"version":3,"sources":["LoginButtonComponent.test.js"],"names":["mock","adapter","Adapter","props","beforeEach","test","onMessageChange","val","describe","global","userId","username_login","password_login","it","wrapper","instance","loginClick","expect","toEqual"],"mappings":"AAYA,cAAKA,IAAL,CAAU,uCAAV;;AACA,cAAKA,IAAL,CAAU,mCAAV;;;;;;AAbA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;AAEA,uBAAU;AAACC,EAAAA,OAAO,EAAG,IAAIC,2BAAJ;AAAX,CAAV;AAKA,IAAIC,KAAJ;AACAC,UAAU,CAAC,YAAM;AACfD,EAAAA,KAAK,GAAG;AACNE,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,eAAe,EAAE,yBAASC,GAAT,EAAc,CAAE;AAF3B,GAAR;AAID,CALS,CAAV;AAOAC,QAAQ,CAAC,4BAAD,EAA+B,YAAM;AAC3CC,EAAAA,MAAM,CAACC,MAAP,GAAgB,EAAhB;AACAD,EAAAA,MAAM,CAACE,cAAP,GAAwB,MAAxB;AACAF,EAAAA,MAAM,CAACG,cAAP,GAAwB,UAAxB;AAEAC,EAAAA,EAAE,CAAC,kCAAD,EAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,YAAAA,OAD+B,GACrB,qBAAQ,6BAAC,6BAAD,EAA0BX,KAA1B,CAAR,CADqB;AAAA;AAAA,8CAE/BW,OAAO,CAACC,QAAR,GAAmBC,UAAnB,CAA8Bb,KAA9B,CAF+B;;AAAA;AAGrCc,YAAAA,MAAM,CAACR,MAAM,CAACC,MAAR,CAAN,CAAsBQ,OAAtB,CAA8B,EAA9B;;AAHqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC,CAAF;AAKD,CAVO,CAAR","sourcesContent":["import 'react-native';\nimport React from 'react';\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\";\nimport * as renderer from 'react-test-renderer';\nimport LoginButtonComponent from \"../components/login/LoginButtonComponent\";\nimport SignUpButtonComponent from \"../components/register/SignUpButtonComponent\";\nimport ResetPassButtonComponent from \"../components/forgot_password/ResetPassButtonComponent\";\nimport { shallow, mount, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({adapter : new Adapter()});\n\njest.mock('react-native-vector-icons/FontAwesome');\njest.mock('react-native-vector-icons/Feather');\n\nlet props;\nbeforeEach(() => {\n  props = {\n    test: true,\n    onMessageChange: function(val) {},\n  };\n});\n\ndescribe('Login Screen Functionality', () => {\n  global.userId = \"\";\n  global.username_login = \"Test\";\n  global.password_login = \"Password\";\n\n  it('Should return -1 (No user found)', async () => {\n    const wrapper = shallow(<LoginButtonComponent {...props} />);\n    await wrapper.instance().loginClick(props)\n    expect(global.userId).toEqual(\"\");\n  });\n});\n\n\n/*\ndescribe('Screen Tests', () => {\n\n  it('Forgot password renders correctly', () => {\n    const tree = renderer.create(\n      <ForgotPasswordMobile />\n      ).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n\n  it('Register renders correctly', () => {\n    const tree = renderer.create(\n      <RegisterMobile />\n      ).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n//import FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\";\n  it('Login renders correctly', () => {\n    const tree = renderer.create(\n      <LoginMobile />\n      ).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n});\n*/\n/*\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\n//import App from \"../App.js\"\nimport LoginMobile from '../screens/LoginMobile';\n\ndescribe(\"<LoginMobile />\", () => {\n    it('has 1 child', () => {\n        const tree = renderer.create(<LoginMobile />).toJSON();\n        expect(tree.children.length).toBe(1);\n    });\n});*/"]}