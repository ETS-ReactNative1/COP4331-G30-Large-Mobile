8b2afe9b572267241e72428f745da6e7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

require("react-native");

var _react = _interopRequireDefault(require("react"));

var renderer = _interopRequireWildcard(require("react-test-renderer"));

var _LoginButtonComponent = _interopRequireDefault(require("../components/login/LoginButtonComponent"));

var _SignUpButtonComponent = _interopRequireDefault(require("../components/register/SignUpButtonComponent"));

var _ResetPassButtonComponent = _interopRequireDefault(require("../components/forgot_password/ResetPassButtonComponent"));

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _fetchMock = _interopRequireDefault(require("fetch-mock"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact.default()
});
var props;
beforeEach(function () {
  props = {
    test: true,
    onEmailSentChange: function onEmailSentChange(val) {},
    onMessageChange: function onMessageChange(val) {},
    onEmailValidChange: function onEmailValidChange(val) {}
  };
});
describe('Reset Password Screen Functionality', function () {
  var response;
  var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_ResetPassButtonComponent.default, props));
  it('Should erase user input on successful email (User found)', function _callee() {
    var url;
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = 'https://cop4331-g30-large.herokuapp.com/api/forgotpass';

            _fetchMock.default.post(url, 200);

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlc2V0UGFzc0J1dHRvbkNvbXBvbmVudC50ZXN0LmpzIl0sIm5hbWVzIjpbImFkYXB0ZXIiLCJBZGFwdGVyIiwicHJvcHMiLCJiZWZvcmVFYWNoIiwidGVzdCIsIm9uRW1haWxTZW50Q2hhbmdlIiwidmFsIiwib25NZXNzYWdlQ2hhbmdlIiwib25FbWFpbFZhbGlkQ2hhbmdlIiwiZGVzY3JpYmUiLCJyZXNwb25zZSIsIndyYXBwZXIiLCJpdCIsInVybCIsImZldGNoTW9jayIsInBvc3QiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsdUJBQVU7QUFBQ0EsRUFBQUEsT0FBTyxFQUFHLElBQUlDLDJCQUFKO0FBQVgsQ0FBVjtBQUVBLElBQUlDLEtBQUo7QUFDQUMsVUFBVSxDQUFDLFlBQU07QUFDZkQsRUFBQUEsS0FBSyxHQUFHO0FBQ05FLElBQUFBLElBQUksRUFBRSxJQURBO0FBRU5DLElBQUFBLGlCQUFpQixFQUFFLDJCQUFTQyxHQUFULEVBQWMsQ0FBRSxDQUY3QjtBQUdOQyxJQUFBQSxlQUFlLEVBQUUseUJBQVNELEdBQVQsRUFBYyxDQUFFLENBSDNCO0FBSU5FLElBQUFBLGtCQUFrQixFQUFFLDRCQUFTRixHQUFULEVBQWMsQ0FBRTtBQUo5QixHQUFSO0FBTUQsQ0FQUyxDQUFWO0FBU0FHLFFBQVEsQ0FBQyxxQ0FBRCxFQUF3QyxZQUFNO0FBQ3BELE1BQUlDLFFBQUo7QUFFQSxNQUFNQyxPQUFPLEdBQUcscUJBQVEsNkJBQUMsaUNBQUQsRUFBOEJULEtBQTlCLENBQVIsQ0FBaEI7QUFRQVUsRUFBQUEsRUFBRSxDQUFDLDBEQUFELEVBQTZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUV2REMsWUFBQUEsR0FGdUQsR0FFakQsd0RBRmlEOztBQUs3REMsK0JBQVVDLElBQVYsQ0FBZUYsR0FBZixFQUFvQixHQUFwQjs7QUFMNkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBN0QsQ0FBRjtBQWlCRCxDQTVCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IExvZ2luQnV0dG9uQ29tcG9uZW50IGZyb20gXCIuLi9jb21wb25lbnRzL2xvZ2luL0xvZ2luQnV0dG9uQ29tcG9uZW50XCI7XG5pbXBvcnQgU2lnblVwQnV0dG9uQ29tcG9uZW50IGZyb20gXCIuLi9jb21wb25lbnRzL3JlZ2lzdGVyL1NpZ25VcEJ1dHRvbkNvbXBvbmVudFwiO1xuaW1wb3J0IFJlc2V0UGFzc0J1dHRvbkNvbXBvbmVudCBmcm9tIFwiLi4vY29tcG9uZW50cy9mb3Jnb3RfcGFzc3dvcmQvUmVzZXRQYXNzQnV0dG9uQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBzaGFsbG93LCBtb3VudCwgY29uZmlndXJlIH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBBZGFwdGVyIGZyb20gJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2JztcbmltcG9ydCBmZXRjaE1vY2sgZnJvbSAnZmV0Y2gtbW9jayc7XG5cbmNvbmZpZ3VyZSh7YWRhcHRlciA6IG5ldyBBZGFwdGVyKCl9KTtcblxubGV0IHByb3BzO1xuYmVmb3JlRWFjaCgoKSA9PiB7XG4gIHByb3BzID0ge1xuICAgIHRlc3Q6IHRydWUsXG4gICAgb25FbWFpbFNlbnRDaGFuZ2U6IGZ1bmN0aW9uKHZhbCkge30sXG4gICAgb25NZXNzYWdlQ2hhbmdlOiBmdW5jdGlvbih2YWwpIHt9LFxuICAgIG9uRW1haWxWYWxpZENoYW5nZTogZnVuY3Rpb24odmFsKSB7fSxcbiAgfTtcbn0pO1xuXG5kZXNjcmliZSgnUmVzZXQgUGFzc3dvcmQgU2NyZWVuIEZ1bmN0aW9uYWxpdHknLCAoKSA9PiB7XG4gIGxldCByZXNwb25zZTtcblxuICBjb25zdCB3cmFwcGVyID0gc2hhbGxvdyg8UmVzZXRQYXNzQnV0dG9uQ29tcG9uZW50IHsuLi5wcm9wc30gLz4pO1xuXG4vKlxuICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICAvL2dsb2JhbC5lbWFpbF9mb3Jnb3RfcGFzc3dvcmQgPSBcInRlc3RAdGVzdC5jb21cIjtcbiAgICAvL3Jlc3BvbnNlID0gYXdhaXQgd3JhcHBlci5pbnN0YW5jZSgpLnJlc2V0UGFzc3dvcmRDbGljayhwcm9wcyk7XG4gIH0pOyovXG5cbiAgaXQoJ1Nob3VsZCBlcmFzZSB1c2VyIGlucHV0IG9uIHN1Y2Nlc3NmdWwgZW1haWwgKFVzZXIgZm91bmQpJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vZXhwZWN0LmFzc2VydGlvbnMoMSk7XG4gICAgY29uc3QgdXJsID0gJ2h0dHBzOi8vY29wNDMzMS1nMzAtbGFyZ2UuaGVyb2t1YXBwLmNvbS9hcGkvZm9yZ290cGFzcyc7XG4gICAgLy9nbG9iYWwuZW1haWxfZm9yZ290X3Bhc3N3b3JkID0gXCJ0ZXN0QHRlc3QuY29tXCI7XG4gICAgLy9sZXQgcmVzcG9uc2UgPSBhd2FpdCB3cmFwcGVyLmluc3RhbmNlKCkucmVzZXRQYXNzd29yZENsaWNrKHByb3BzKTtcbiAgICBmZXRjaE1vY2sucG9zdCh1cmwsIDIwMCk7XG5cbiAgICAvL2V4cGVjdChnbG9iYWwuZW1haWxfZm9yZ290X3Bhc3N3b3JkKS50b0VxdWFsKFwiXCIpO1xuXG4vKlxuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93KDxSZXNldFBhc3NCdXR0b25Db21wb25lbnQgey4uLnByb3BzfSAvPik7XG4gICAgY29uc3QgaW5zdGFuY2UgID0gd3JhcHBlci5pbnN0YW5jZSgpO1xuICAgIGF3YWl0IHdhaXQgKCgpID0+IHtcbiAgICAgIGluc3RhbmNlLnJlc2V0UGFzc3dvcmRDbGljayhwcm9wcyk7XG4gICAgICBleHBlY3QoZ2xvYmFsLmVtYWlsX2ZvcmdvdF9wYXNzd29yZCkudG9FcXVhbChcIlwiKTtcbiAgICB9KSovXG4gIH0pO1xufSk7Il19