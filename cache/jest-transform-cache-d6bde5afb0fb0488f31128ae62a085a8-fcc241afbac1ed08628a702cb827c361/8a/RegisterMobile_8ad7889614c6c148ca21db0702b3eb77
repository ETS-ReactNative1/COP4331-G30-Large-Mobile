777e142a334e2ffd665698277b31a19c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _GoBackButtonComponent = _interopRequireDefault(require("../components/GoBackButtonComponent"));

var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));

var _SignUpButtonComponent = _interopRequireDefault(require("../components/register/SignUpButtonComponent"));

var _reactNavigation = require("react-navigation");

var _reactDom = require("react-dom");

var _ReactNativeStyleAttributes = require("react-native/Libraries/Components/View/ReactNativeStyleAttributes");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var RegisterMobile = function (_Component) {
  (0, _inherits2.default)(RegisterMobile, _Component);

  var _super = _createSuper(RegisterMobile);

  function RegisterMobile() {
    var _this;

    (0, _classCallCheck2.default)(this, RegisterMobile);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      message: '',
      emailSent: false,
      isEmailValid: true,
      isPhoneValid: true,
      isUsernameValid: true,
      isPasswordValid: true
    };

    _this.handleEmailSentChange = function (isSent) {
      _this.setState(function (_ref) {
        var emailSent = _ref.emailSent;
        return {
          emailSent: isSent
        };
      });
    };

    _this.handleMessageChange = function (message) {
      _this.setState({
        message: message
      });
    };

    _this.handleEmailValidChange = function (valid) {
      _this.setState(function (_ref2) {
        var isEmailValid = _ref2.isEmailValid;
        return {
          isEmailValid: valid
        };
      });
    };

    _this.handlePhoneValidChange = function (valid) {
      _this.setState(function (_ref3) {
        var isPhoneValid = _ref3.isPhoneValid;
        return {
          isPhoneValid: valid
        };
      });
    };

    _this.handleUsernameValidChange = function (valid) {
      _this.setState(function (_ref4) {
        var isUsernameValid = _ref4.isUsernameValid;
        return {
          isUsernameValid: valid
        };
      });
    };

    _this.handlePasswordValidChange = function (valid) {
      _this.setState(function (_ref5) {
        var isPasswordValid = _ref5.isPasswordValid;
        return {
          isPasswordValid: valid
        };
      });
    };

    _this.firstNameChangedHandler = function _callee(val) {
      return _regenerator.default.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              global.firstName = val;

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, null, Promise);
    };

    _this.lastNameChangedHandler = function _callee2(val) {
      return _regenerator.default.async(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              global.lastName = val;

            case 1:
            case "end":
              return _context2.stop();
          }
        }
      }, null, null, null, Promise);
    };

    _this.emailChangedHandler = function _callee3(val) {
      return _regenerator.default.async(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              global.email = val;

            case 1:
            case "end":
              return _context3.stop();
          }
        }
      }, null, null, null, Promise);
    };

    _this.phoneChangedHandler = function _callee4(val) {
      return _regenerator.default.async(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              global.phone = val;

            case 1:
            case "end":
              return _context4.stop();
          }
        }
      }, null, null, null, Promise);
    };

    _this.usernameChangedHandler = function _callee5(val) {
      return _regenerator.default.async(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              global.username = val;

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, null, null, null, Promise);
    };

    _this.passwordChangedHandler = function _callee6(val) {
      return _regenerator.default.async(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              global.password = val;

            case 1:
            case "end":
              return _context6.stop();
          }
        }
      }, null, null, null, Promise);
    };

    return _this;
  }

  (0, _createClass2.default)(RegisterMobile, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.createElement(_reactNative.View, {
        style: styles.container
      }, _react.default.createElement(_reactNative.ImageBackground, {
        source: require("../assets/images/background3.png"),
        resizeMode: "cover",
        style: styles.background
      }, _react.default.createElement(_GoBackButtonComponent.default, {
        navigation: this.props.navigation,
        style: styles.goBackButtonComponent
      }), _react.default.createElement(_reactNative.View, {
        style: styles.register_Register
      }, _react.default.createElement(_reactNative.View, {
        style: styles.register_RegisterBackground
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.header_Register
      }, "Register"), _react.default.createElement(_reactNative.Text, {
        style: styles.text_Incorrect
      }, this.state.message), _react.default.createElement(_reactNative.View, {
        style: styles.fullName
      }, _react.default.createElement(_reactNative.TextInput, {
        placeholder: "First Name",
        style: styles.firstNameField,
        onChangeText: function onChangeText(val) {
          _this2.firstNameChangedHandler(val);
        }
      }), _react.default.createElement(_reactNative.TextInput, {
        placeholder: "Last Name",
        style: styles.lastNameField,
        onChangeText: function onChangeText(val) {
          _this2.lastNameChangedHandler(val);
        }
      }), _react.default.createElement(_FontAwesome.default, {
        name: "male",
        style: styles.nameIcon
      })), _react.default.createElement(_reactNative.View, {
        style: styles.email
      }, _react.default.createElement(_reactNative.TextInput, {
        placeholder: "E-Mail *",
        style: [styles.emailField, !this.state.isEmailValid && styles.incorrect],
        onChangeText: function onChangeText(val) {
          _this2.emailChangedHandler(val);
        }
      }), _react.default.createElement(_FontAwesome.default, {
        name: "envelope",
        style: styles.eMailIcon
      })), _react.default.createElement(_reactNative.View, {
        style: styles.phone
      }, _react.default.createElement(_reactNative.TextInput, {
        placeholder: "Phone number",
        keyboardType: "phone-pad",
        style: [styles.phoneField, !this.state.isPhoneValid && styles.incorrect],
        onChangeText: function onChangeText(val) {
          _this2.phoneChangedHandler(val);
        }
      }), _react.default.createElement(_FontAwesome.default, {
        name: "phone",
        style: styles.phoneIcon
      })), _react.default.createElement(_reactNative.View, {
        style: styles.username
      }, _react.default.createElement(_reactNative.TextInput, {
        placeholder: "Username *",
        style: [styles.usernameField, !this.state.isUsernameValid && styles.incorrect],
        onChangeText: function onChangeText(val) {
          _this2.usernameChangedHandler(val);
        }
      }), _react.default.createElement(_FontAwesome.default, {
        name: "user",
        style: styles.userIcon
      })), _react.default.createElement(_reactNative.View, {
        style: styles.password
      }, _react.default.createElement(_reactNative.TextInput, {
        placeholder: "Password *",
        style: [styles.passwordField, !this.state.isPasswordValid && styles.incorrect],
        onChangeText: function onChangeText(val) {
          _this2.passwordChangedHandler(val);
        }
      }), _react.default.createElement(_FontAwesome.default, {
        name: "key",
        style: styles.passwordIcon
      })), _react.default.createElement(_SignUpButtonComponent.default, {
        navigation: this.props.navigation,
        state: this.state,
        onEmailSentChange: this.handleEmailSentChange,
        onMessageChange: this.handleMessageChange,
        onEmailValidChange: this.handleEmailValidChange,
        onPhoneValidChange: this.handlePhoneValidChange,
        onUsernameValidChange: this.handleUsernameValidChange,
        onPasswordValidChange: this.handlePasswordValidChange,
        style: styles.signUpButtonComponent
      }))), _react.default.createElement(_reactNative.View, {
        style: styles.register_Verification
      }, this.state.emailSent && _react.default.createElement(_reactNative.View, {
        style: styles.register_VerificationBackground
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.text_verifyEmail
      }, "Email Verification Sent! Check your email.")))));
    }
  }]);
  return RegisterMobile;
}(_react.Component);

exports.default = RegisterMobile;

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "rgba(255,255,255,1)"
  },
  incorrect: {
    backgroundColor: "rgba(242, 38, 19, 0.1)"
  },
  background: {
    flex: 1,
    justifyContent: "center",
    width: "100%",
    height: "100%"
  },
  goBackButtonComponent: {
    position: "absolute",
    top: "6.5%",
    right: 24,
    height: 50,
    width: 50
  },
  register_Register: {
    top: "15.99%",
    height: "68.02%",
    position: "absolute",
    left: 22,
    right: 22
  },
  register_RegisterBackground: {
    top: "0%",
    left: 0,
    height: "100%",
    position: "absolute",
    backgroundColor: "rgba(255,255,255,1)",
    borderRadius: 15,
    shadowColor: "rgba(0,0,0,1)",
    shadowOffset: {
      width: 3,
      height: 3
    },
    elevation: 10,
    shadowOpacity: 0.25,
    shadowRadius: 10,
    right: 0,
    borderColor: "rgba(210,210,210,210)",
    borderWidth: 1
  },
  header_Register: {
    top: "6.5%",
    position: "absolute",
    fontFamily: "roboto-700",
    color: "rgba(15,163,177,1)",
    fontSize: 28,
    left: 0,
    right: 0,
    textAlign: "center"
  },
  text_Incorrect: {
    top: "15%",
    left: 0,
    position: "absolute",
    fontFamily: "roboto-700",
    color: "rgba(242, 38, 19, 1)",
    fontSize: 16,
    textAlign: "center",
    right: 0
  },
  fullName: {
    top: "22%",
    left: "8%",
    height: 41,
    position: "absolute",
    right: "8%"
  },
  firstNameField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: 29,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: "51%"
  },
  lastNameField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: "52%",
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: 0
  },
  nameIcon: {
    top: 9,
    left: 0,
    position: "absolute",
    color: "rgba(15,163,177,1)",
    fontSize: 30
  },
  email: {
    top: "33%",
    left: "8%",
    height: 41,
    position: "absolute",
    right: "8%"
  },
  emailField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: 30,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: 0
  },
  eMailIcon: {
    top: 13,
    left: 0,
    position: "absolute",
    color: "rgba(15,163,177,1)",
    fontSize: 20
  },
  phone: {
    top: "44%",
    left: "8%",
    height: 41,
    position: "absolute",
    right: "8%"
  },
  phoneField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: 30,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: 0
  },
  phoneIcon: {
    top: 11,
    left: 0,
    position: "absolute",
    color: "rgba(15,163,177,1)",
    fontSize: 25
  },
  username: {
    top: "55%",
    left: "8%",
    height: 41,
    position: "absolute",
    right: "8%"
  },
  usernameField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: 29,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: 0
  },
  userIcon: {
    top: 13,
    left: 0,
    position: "absolute",
    color: "rgba(15,163,177,1)",
    fontSize: 25
  },
  password: {
    top: "66%",
    left: "8%",
    height: 41,
    position: "absolute",
    right: "8%"
  },
  passwordField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: 29,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: 0
  },
  passwordIcon: {
    top: 14,
    left: 0,
    position: "absolute",
    color: "rgba(15,163,177,1)",
    fontSize: 20
  },
  signUpButtonComponent: {
    position: "absolute",
    top: "83.75%",
    left: 52,
    height: "8.75%",
    right: 54
  },
  register_Verification: {
    top: "90%",
    height: "6%",
    position: "absolute",
    left: 22,
    right: 22
  },
  register_VerificationBackground: {
    top: "0%",
    left: 0,
    height: "100%",
    position: "absolute",
    backgroundColor: "rgba(255,255,255,1)",
    borderRadius: 15,
    shadowColor: "rgba(0,0,0,1)",
    shadowOffset: {
      width: 3,
      height: 3
    },
    elevation: 10,
    shadowOpacity: 0.25,
    shadowRadius: 10,
    right: 0,
    borderColor: "rgba(210,210,210,210)",
    borderWidth: 1
  },
  text_verifyEmail: {
    top: "18.74%",
    left: 0,
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "rgba(0,0,0,1)",
    fontSize: 16,
    right: 0,
    textAlign: "center"
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,