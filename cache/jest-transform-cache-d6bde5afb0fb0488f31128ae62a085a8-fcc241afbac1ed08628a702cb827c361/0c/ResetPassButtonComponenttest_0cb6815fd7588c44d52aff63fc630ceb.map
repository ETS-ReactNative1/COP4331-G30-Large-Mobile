{"version":3,"sources":["ResetPassButtonComponent.test.js"],"names":["adapter","Adapter","props","beforeEach","test","onEmailSentChange","val","onMessageChange","onEmailValidChange","describe","it","global","email_forgot_password","wrapper","instance","expect","resetPasswordClick","resolves","toEqual"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,uBAAU;AAACA,EAAAA,OAAO,EAAG,IAAIC,2BAAJ;AAAX,CAAV;AAEA,IAAIC,KAAJ;AACAC,UAAU,CAAC,YAAM;AACfD,EAAAA,KAAK,GAAG;AACNE,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,iBAAiB,EAAE,2BAASC,GAAT,EAAc,CAAE,CAF7B;AAGNC,IAAAA,eAAe,EAAE,yBAASD,GAAT,EAAc,CAAE,CAH3B;AAINE,IAAAA,kBAAkB,EAAE,4BAASF,GAAT,EAAc,CAAE;AAJ9B,GAAR;AAMD,CAPS,CAAV;AASAG,QAAQ,CAAC,qCAAD,EAAwC,YAAM;AAWpDC,EAAAA,EAAE,CAAC,0DAAD,EAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAc7DC,YAAAA,MAAM,CAACC,qBAAP,GAA+B,eAA/B;AAEMC,YAAAA,OAhBuD,GAgB7C,qBAAQ,6BAAC,iCAAD,EAA8BX,KAA9B,CAAR,CAhB6C;AAiBvDY,YAAAA,QAjBuD,GAiB3CD,OAAO,CAACC,QAAR,EAjB2C;AAAA,6CAsBtDC,MAAM,CAACD,QAAQ,CAACE,kBAAT,CAA4Bd,KAA5B,CAAD,CAAN,CAA2Ce,QAA3C,CAAoDC,OAApD,CAA4D,GAA5D,CAtBsD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7D,CAAF;AAyBD,CApCO,CAAR","sourcesContent":["import 'react-native';\nimport React from 'react';\nimport * as renderer from 'react-test-renderer';\nimport LoginButtonComponent from \"../components/login/LoginButtonComponent\";\nimport SignUpButtonComponent from \"../components/register/SignUpButtonComponent\";\nimport ResetPassButtonComponent from \"../components/forgot_password/ResetPassButtonComponent\";\nimport { shallow, mount, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport fetchMock from 'fetch-mock';\n\nconfigure({adapter : new Adapter()});\n\nlet props;\nbeforeEach(() => {\n  props = {\n    test: true,\n    onEmailSentChange: function(val) {},\n    onMessageChange: function(val) {},\n    onEmailValidChange: function(val) {},\n  };\n});\n\ndescribe('Reset Password Screen Functionality', () => {\n  //let response;\n\n  //const wrapper = shallow(<ResetPassButtonComponent {...props} />);\n\n/*\n  beforeEach(async () => {\n    //global.email_forgot_password = \"test@test.com\";\n    //response = await wrapper.instance().resetPasswordClick(props);\n  });*/\n\n  it('Should erase user input on successful email (User found)', async () => {\n    //expect.assertions(1);\n    //const url = 'https://cop4331-g30-large.herokuapp.com/api/forgotpass';\n    //global.email_forgot_password = \"asdsad\";\n    //let email = \"\";\n    //let response = await wrapper.instance().resetPasswordClick(props);\n    /*\n    fetchMock.post(url, {\n      status: 200,\n      body: JSON.stringify({email:email})\n    });*/\n\n    //expect(global.email_forgot_password).toEqual();\n\n    global.email_forgot_password = \"test@test.com\";\n\n    const wrapper = shallow(<ResetPassButtonComponent {...props} />);\n    const instance  = wrapper.instance();\n\n    //await instance.resetPasswordClick(props);\n    //await expect(global.email_forgot_password).toEqual(\"\");\n\n    return expect(instance.resetPasswordClick(props)).resolves.toEqual(200);\n    //return instance.resetPasswordClick(props).then(expect(global.email_forgot_password).toEqual(\"\"));\n  });\n});"]}