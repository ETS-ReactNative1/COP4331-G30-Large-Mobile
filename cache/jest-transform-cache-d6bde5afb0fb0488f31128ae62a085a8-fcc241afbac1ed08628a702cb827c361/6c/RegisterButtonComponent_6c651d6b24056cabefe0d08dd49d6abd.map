{"version":3,"sources":["RegisterButtonComponent.js"],"names":["RegisterButtonComponent","styles","container","props","style","navigation","navigate","register_Button","register_Text","Component","StyleSheet","create","top","left","height","position","backgroundColor","borderRadius","right","fontFamily","color","fontSize","textAlign"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEqBA,uB;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,aACE,6BAAC,6BAAD;AAAkB,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKC,KAAL,CAAWC,KAA9B;AAAzB,SACE,6BAAC,6BAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACD,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,CAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAEL,MAAM,CAACM;AAFhB,SAIE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,oBAJF,CADF,CADF;AAUD;;;EAZkDC,gB;;;;AAqDrD,IAAMR,MAAM,GAAGS,wBAAWC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE,EADoB;AAE/BK,EAAAA,eAAe,EAAE;AACfK,IAAAA,GAAG,EAAE,IADU;AAEfC,IAAAA,IAAI,EAAE,CAFS;AAGfC,IAAAA,MAAM,EAAE,MAHO;AAIfC,IAAAA,QAAQ,EAAE,UAJK;AAKfC,IAAAA,eAAe,EAAE,oBALF;AAMfC,IAAAA,YAAY,EAAE,EANC;AAOfC,IAAAA,KAAK,EAAE;AAPQ,GAFc;AAW/BV,EAAAA,aAAa,EAAE;AACbI,IAAAA,GAAG,EAAE,KADQ;AAEbC,IAAAA,IAAI,EAAE,CAFO;AAGbE,IAAAA,QAAQ,EAAE,UAHG;AAIbI,IAAAA,UAAU,EAAE,gBAJC;AAKbC,IAAAA,KAAK,EAAE,qBALM;AAMbC,IAAAA,QAAQ,EAAE,EANG;AAObC,IAAAA,SAAS,EAAE,QAPE;AAQbJ,IAAAA,KAAK,EAAE;AARM;AAXgB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, TouchableOpacity, Text } from \"react-native\";\nimport { createStackNavigator, createAppContainer } from 'react-navigation'; \n\nexport default class RegisterButtonComponent extends Component {\n  render() {\n    return (\n      <TouchableOpacity style={[styles.container, this.props.style]}>\n        <TouchableOpacity /* Conditional navigation not supported at the moment */\n          onPress={() => this.props.navigation.navigate('Register')}\n          style={styles.register_Button}\n        >\n          <Text style={styles.register_Text}>Register</Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n/*\n  registerClick = async (props) =>\n  {\n    console.log(\"Navigate to Untitled\")\n\n    try \n    { \n      var obj = {username:global.username.trim(),password:global.password.trim()}; \n        console.log(obj);\n      var js = JSON.stringify(obj); \n      const response = await fetch('https://cop4331-g30-large.herokuapp.com/api/login', \n      {method:'POST',body:js,headers:{'Content-Type': 'application/json'}}); \n      var res = JSON.parse(await response.text());\n\n      console.log(\"ID = \" + \"'\" + res.id + \"'\");\n      if( res.id === '' ) \n      { \n        \n        props.setState({message: \"Username/Password combination incorrect\" }); \n      } \n      else \n      { \n        global.firstName = res.firstName;\n        global.lastName = res.lastName; \n        global.userId = res.id.toString();\n\n        console.log(\"ID = \" + \"'\" + global.userId + \"'\");\n        props.navigation.navigate('Dashboard');\n      } \n    } \n    catch(e) \n    {\n      props.state.setState({message: e.message }); \n    }\n\n    //global.password = \"\";\n    //global.username = \"\";\n  }*/\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  register_Button: {\n    top: \"0%\",\n    left: 0,\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \"rgba(15,163,177,1)\",\n    borderRadius: 50,\n    right: 0\n  },\n  register_Text: {\n    top: \"25%\",\n    left: 0,\n    position: \"absolute\",\n    fontFamily: \"roboto-regular\",\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16,\n    textAlign: \"center\",\n    right: 0\n  }\n});\n"]}