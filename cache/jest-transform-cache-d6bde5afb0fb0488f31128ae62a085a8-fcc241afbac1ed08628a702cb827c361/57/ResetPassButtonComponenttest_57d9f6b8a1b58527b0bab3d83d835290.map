{"version":3,"sources":["ResetPassButtonComponent.test.js"],"names":["adapter","Adapter","props","beforeEach","test","onEmailSentChange","val","onMessageChange","onEmailValidChange","describe","response","wrapper","global","email_forgot_password","instance","resetPasswordClick","it","expect","toEqual"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,uBAAU;AAACA,EAAAA,OAAO,EAAG,IAAIC,2BAAJ;AAAX,CAAV;AAEA,IAAIC,KAAJ;AACAC,UAAU,CAAC,YAAM;AACfD,EAAAA,KAAK,GAAG;AACNE,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,iBAAiB,EAAE,2BAASC,GAAT,EAAc,CAAE,CAF7B;AAGNC,IAAAA,eAAe,EAAE,yBAASD,GAAT,EAAc,CAAE,CAH3B;AAINE,IAAAA,kBAAkB,EAAE,4BAASF,GAAT,EAAc,CAAE;AAJ9B,GAAR;AAMD,CAPS,CAAV;AASAG,QAAQ,CAAC,qCAAD,EAAwC,YAAM;AACpD,MAAIC,QAAJ;AAEA,MAAMC,OAAO,GAAG,qBAAQ,6BAAC,iCAAD,EAA8BT,KAA9B,CAAR,CAAhB;AAEAC,EAAAA,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AACTS,YAAAA,MAAM,CAACC,qBAAP,GAA+B,eAA/B;AADS;AAAA,8CAEQF,OAAO,CAACG,QAAR,GAAmBC,kBAAnB,CAAsCb,KAAtC,CAFR;;AAAA;AAETQ,YAAAA,QAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAAV;AAKAM,EAAAA,EAAE,CAAC,0DAAD,EAA6D;AAAA;AAAA;AAAA;AAAA;AAM7DC,YAAAA,MAAM,CAACL,MAAM,CAACC,qBAAR,CAAN,CAAqCK,OAArC,CAA6C,EAA7C;;AAN6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7D,CAAF;AAgBD,CA1BO,CAAR","sourcesContent":["import 'react-native';\nimport React from 'react';\nimport * as renderer from 'react-test-renderer';\nimport LoginButtonComponent from \"../components/login/LoginButtonComponent\";\nimport SignUpButtonComponent from \"../components/register/SignUpButtonComponent\";\nimport ResetPassButtonComponent from \"../components/forgot_password/ResetPassButtonComponent\";\nimport { shallow, mount, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport fetchMock from 'fetch-mock';\n\nconfigure({adapter : new Adapter()});\n\nlet props;\nbeforeEach(() => {\n  props = {\n    test: true,\n    onEmailSentChange: function(val) {},\n    onMessageChange: function(val) {},\n    onEmailValidChange: function(val) {},\n  };\n});\n\ndescribe('Reset Password Screen Functionality', () => {\n  let response;\n\n  const wrapper = shallow(<ResetPassButtonComponent {...props} />);\n\n  beforeEach(async () => {\n    global.email_forgot_password = \"test@test.com\";\n    response = await wrapper.instance().resetPasswordClick(props);\n  });\n\n  it('Should erase user input on successful email (User found)', async () => {\n    //expect.assertions(1);\n    //const url = 'https://cop4331-g30-large.herokuapp.com/api/forgotpass';\n\n    //fetchMock.mock(url, 200);\n\n    expect(global.email_forgot_password).toEqual(\"\");\n\n/*\n    const wrapper = shallow(<ResetPassButtonComponent {...props} />);\n    const instance  = wrapper.instance();\n    await wait (() => {\n      instance.resetPasswordClick(props);\n      expect(global.email_forgot_password).toEqual(\"\");\n    })*/\n  });\n});"]}