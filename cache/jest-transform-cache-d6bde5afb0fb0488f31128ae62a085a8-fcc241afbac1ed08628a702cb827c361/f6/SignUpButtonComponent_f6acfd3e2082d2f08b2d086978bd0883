dad4fe7dd11eb6c897e0682d33ca460c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var SignUpButtonComponent = function (_Component) {
  (0, _inherits2.default)(SignUpButtonComponent, _Component);

  var _super = _createSuper(SignUpButtonComponent);

  function SignUpButtonComponent() {
    var _this;

    (0, _classCallCheck2.default)(this, SignUpButtonComponent);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.signUpClick = function _callee(props) {
      var obj, js, response, res;
      return _regenerator.default.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              props.onUsernameValidChange(true);
              props.onPasswordValidChange(true);
              props.onEmailValidChange(true);
              props.onMessageChange("");

              if (_this.isInputValid(props)) {
                _context.next = 7;
                break;
              }

              return _context.abrupt("return");

            case 7:
              obj = {
                firstName: global.firstName.trim(),
                lastName: global.lastName.trim(),
                username: global.username.trim(),
                phone: global.phone.trim(),
                email: global.email.trim(),
                password: global.password.trim()
              };
              js = JSON.stringify(obj);
              _context.next = 11;
              return _regenerator.default.awrap(fetch('https://cop4331-g30-large.herokuapp.com/api/register', {
                method: 'POST',
                body: js,
                headers: {
                  'Content-Type': 'application/json'
                }
              }));

            case 11:
              response = _context.sent;
              _context.t0 = JSON;
              _context.next = 15;
              return _regenerator.default.awrap(response.text());

            case 15:
              _context.t1 = _context.sent;
              res = _context.t0.parse.call(_context.t0, _context.t1);
              props.onEmailSentChange(true);
              _context.next = 23;
              break;

            case 20:
              _context.prev = 20;
              _context.t2 = _context["catch"](0);
              props.onMessageChange(_context.t2.message);

            case 23:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, [[0, 20]], Promise);
    };

    return _this;
  }

  (0, _createClass2.default)(SignUpButtonComponent, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.createElement(_reactNative.TouchableOpacity, {
        style: [styles.container, this.props.style]
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          return _this2.signUpClick(_this2.props);
        },
        style: styles.signUp_Button
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.signUp_Text
      }, "Sign Up")));
    }
  }, {
    key: "isInputValid",
    value: function isInputValid(props) {
      if (global.username === "" || global.password === "" || global.email === "") {
        props.onMessageChange("Required fields not filled");
        if (global.username === "") props.onUsernameValidChange(false);
        if (global.password === "") props.onPasswordValidChange(false);
        if (global.email === "") props.onEmailValidChange(false);
        return false;
      } else {
        props.onUsernameValidChange(true);
        props.onPasswordValidChange(true);
        props.onEmailValidChange(true);
      }

      if (global.password.length < 5) {
        props.onMessageChange("Password must be 5 or more characters");
        props.onPasswordValidChange(false);
        return false;
      } else {
        props.onPasswordValidChange(true);
      }

      var reg;
      var emailReg = '[^@ \t\r\n]+@[^@ \t\r\n]+\.[^@ \t\r\n]+';
      var phoneReg1 = '[0-9]{3}-[0-9]{3}-[0-9]{4}';
      var phoneReg2 = '[0-9]{10}';
      reg = new RegExp(emailReg);

      if (!reg.test(global.email)) {
        props.onMessageChange("Invalid email address");
        props.onEmailValidChange(false);
        return false;
      } else {
        props.onEmailValidChange(true);
      }

      if (global.phone.length != 0) {
        if (global.phone.includes('-')) {
          reg = new RegExp(phoneReg1);

          if (!reg.test(global.phone) || global.phone.length != 12) {
            props.onMessageChange("Invalid phone number");
            props.onPhoneValidChange(false);
            return false;
          } else {
            props.onPhoneValidChange(true);
          }
        } else {
          reg = new RegExp(phoneReg2);

          if (!reg.test(global.phone) || global.phone.length != 10) {
            props.onMessageChange("Invalid phone number");
            props.onPhoneValidChange(false);
            return false;
          } else {
            props.onPhoneValidChange(true);
          }
        }
      }

      return true;
    }
  }]);
  return SignUpButtonComponent;
}(_react.Component);

exports.default = SignUpButtonComponent;

var styles = _reactNative.StyleSheet.create({
  container: {},
  signUp_Button: {
    top: "0%",
    height: "100%",
    position: "absolute",
    backgroundColor: "rgba(15,163,177,1)",
    borderRadius: 50,
    left: 0,
    width: "100%"
  },
  signUp_Text: {
    top: "25%",
    left: 0,
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "rgba(255,255,255,1)",
    fontSize: 16,
    textAlign: "center",
    right: 0
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,