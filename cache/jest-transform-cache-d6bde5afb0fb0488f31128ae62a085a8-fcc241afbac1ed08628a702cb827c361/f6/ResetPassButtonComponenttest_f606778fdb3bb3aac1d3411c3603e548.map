{"version":3,"sources":["ResetPassButtonComponent.test.js"],"names":["adapter","Adapter","props","beforeEach","test","onEmailSentChange","val","onMessageChange","onEmailValidChange","describe","it","global","email_forgot_password","wrapper","instance","resetPasswordClick","expect","toEqual"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,uBAAU;AAACA,EAAAA,OAAO,EAAG,IAAIC,2BAAJ;AAAX,CAAV;AAEA,IAAIC,KAAJ;AACAC,UAAU,CAAC,YAAM;AACfD,EAAAA,KAAK,GAAG;AACNE,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,iBAAiB,EAAE,2BAASC,GAAT,EAAc,CAAE,CAF7B;AAGNC,IAAAA,eAAe,EAAE,yBAASD,GAAT,EAAc,CAAE,CAH3B;AAINE,IAAAA,kBAAkB,EAAE,4BAASF,GAAT,EAAc,CAAE;AAJ9B,GAAR;AAMD,CAPS,CAAV;AASAG,QAAQ,CAAC,qCAAD,EAAwC,YAAM;AACpDC,EAAAA,EAAE,CAAC,0DAAD,EAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7DC,YAAAA,MAAM,CAACC,qBAAP,GAA+B,EAA/B;AAEMC,YAAAA,OAHuD,GAG7C,qBAAQ,6BAAC,iCAAD,EAA8BX,KAA9B,CAAR,CAH6C;AAAA;AAAA,8CAIvDW,OAAO,CAACC,QAAR,GAAmBC,kBAAnB,CAAsCb,KAAtC,CAJuD;;AAAA;AAK7Dc,YAAAA,MAAM,CAACL,MAAM,CAACC,qBAAR,CAAN,CAAqCK,OAArC,CAA6C,EAA7C;;AAL6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7D,CAAF;AAOD,CARO,CAAR","sourcesContent":["import 'react-native';\nimport React from 'react';\nimport * as renderer from 'react-test-renderer';\nimport LoginButtonComponent from \"../components/login/LoginButtonComponent\";\nimport SignUpButtonComponent from \"../components/register/SignUpButtonComponent\";\nimport ResetPassButtonComponent from \"../components/forgot_password/ResetPassButtonComponent\";\nimport { shallow, mount, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({adapter : new Adapter()});\n\nlet props;\nbeforeEach(() => {\n  props = {\n    test: true,\n    onEmailSentChange: function(val) {},\n    onMessageChange: function(val) {},\n    onEmailValidChange: function(val) {},\n  };\n});\n\ndescribe('Reset Password Screen Functionality', () => {\n  it('Should erase user input on successful email (User found)', async () => {\n    global.email_forgot_password = \"\";\n\n    const wrapper = shallow(<ResetPassButtonComponent {...props} />);\n    await wrapper.instance().resetPasswordClick(props);\n    expect(global.email_forgot_password).toEqual(\"\");\n  });\n});"]}