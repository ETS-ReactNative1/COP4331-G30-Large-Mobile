{"version":3,"mappings":"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","names":["stringOrFunction","PropTypes","oneOfType","func","string","makeValidElementType","adapter","validElementTypeRequired","props","propName","isValidElementType","args","arguments","isRequired","propValue","TypeError","validElementType","createMountWrapper","node","options","WrappingComponent","wrappingComponent","WrapperComponent","_inherits","_classCallCheck","_this","wrappingComponentProps","context","state","mount","_createClass","key","value","newProps","newContext","callback","undefined","oldProps","oldContext","setState","Component","refProp","component","_react","ref","_RootFinder","React","propTypes","object","defaultProps","type","contextTypes","childContextTypes","prototype","getChildContext"],"sources":["../src/createMountWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ref } from 'airbnb-prop-types';\nimport RootFinder from './RootFinder';\n\n/* eslint react/forbid-prop-types: 0 */\n\nconst stringOrFunction = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\nconst makeValidElementType = (adapter) => {\n  if (!adapter) {\n    return stringOrFunction;\n  }\n\n  function validElementTypeRequired(props, propName, ...args) {\n    if (!adapter.isValidElementType) {\n      return stringOrFunction.isRequired(props, propName, ...args);\n    }\n    const propValue = props[propName]; // eslint-disable-line react/destructuring-assignment\n    if (adapter.isValidElementType(propValue)) {\n      return null;\n    }\n    return new TypeError(`${propName} must be a valid element type!`);\n  }\n\n  function validElementType(props, propName, ...args) {\n    const propValue = props[propName];\n    if (propValue == null) {\n      return null;\n    }\n    return validElementTypeRequired(props, propName, ...args);\n  }\n  validElementType.isRequired = validElementTypeRequired;\n\n  return validElementType;\n};\n\n/**\n * This is a utility component to wrap around the nodes we are\n * passing in to `mount()`. Theoretically, you could do everything\n * we are doing without this, but this makes it easier since\n * `renderIntoDocument()` doesn't really pass back a reference to\n * the DOM node it rendered to, so we can't really \"re-render\" to\n * pass new props in.\n */\nexport default function createMountWrapper(node, options = {}) {\n  const { adapter, wrappingComponent: WrappingComponent } = options;\n\n  class WrapperComponent extends React.Component {\n    constructor(...args) {\n      super(...args);\n      const { props, wrappingComponentProps, context } = this.props;\n      this.state = {\n        mount: true,\n        props,\n        wrappingComponentProps,\n        context,\n      };\n    }\n\n    setChildProps(newProps, newContext, callback = undefined) {\n      const { props: oldProps, context: oldContext } = this.state;\n      const props = { ...oldProps, ...newProps };\n      const context = { ...oldContext, ...newContext };\n      this.setState({ props, context }, callback);\n    }\n\n    setWrappingComponentProps(props, callback = undefined) {\n      this.setState({ wrappingComponentProps: props }, callback);\n    }\n\n    render() {\n      const { Component, refProp } = this.props;\n      const { mount, props, wrappingComponentProps } = this.state;\n      if (!mount) return null;\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      const component = <Component ref={refProp} {...props} />;\n      if (WrappingComponent) {\n        return (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <WrappingComponent {...wrappingComponentProps}>\n            <RootFinder>{component}</RootFinder>\n          </WrappingComponent>\n        );\n      }\n      return component;\n    }\n  }\n  WrapperComponent.propTypes = {\n    Component: makeValidElementType(adapter).isRequired,\n    refProp: PropTypes.oneOfType([PropTypes.string, ref()]),\n    props: PropTypes.object.isRequired,\n    wrappingComponentProps: PropTypes.object,\n    context: PropTypes.object,\n  };\n  WrapperComponent.defaultProps = {\n    refProp: null,\n    context: null,\n    wrappingComponentProps: null,\n  };\n\n  if (options.context && (node.type.contextTypes || options.childContextTypes)) {\n    // For full rendering, we are using this wrapper component to provide context if it is\n    // specified in both the options AND the child component defines `contextTypes` statically\n    // OR the merged context types for all children (the node component or deeper children) are\n    // specified in options parameter under childContextTypes.\n    // In that case, we define both a `getChildContext()` function and a `childContextTypes` prop.\n    const childContextTypes = {\n      ...node.type.contextTypes,\n      ...options.childContextTypes,\n    };\n\n    WrapperComponent.prototype.getChildContext = function getChildContext() {\n      return this.state.context;\n    };\n    WrapperComponent.childContextTypes = childContextTypes;\n  }\n  return WrapperComponent;\n}\n"]}