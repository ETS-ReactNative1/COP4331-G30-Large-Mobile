c361d7cd883971e042dcfd97243af25e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNavigation = require("react-navigation");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var LoginButtonComponent = function (_Component) {
  (0, _inherits2.default)(LoginButtonComponent, _Component);

  var _super = _createSuper(LoginButtonComponent);

  function LoginButtonComponent() {
    var _this;

    (0, _classCallCheck2.default)(this, LoginButtonComponent);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.loginClick = function _callee(props) {
      var obj, js, response, res;
      return _regenerator.default.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              obj = {
                username: global.username_login.trim(),
                password: global.password_login.trim()
              };
              props.onMessageChange("");
              js = JSON.stringify(obj);
              _context.next = 6;
              return _regenerator.default.awrap(fetch('https://cop4331-g30-large.herokuapp.com/api/login', {
                method: 'POST',
                body: js,
                headers: {
                  'Content-Type': 'application/json'
                }
              }));

            case 6:
              response = _context.sent;
              _context.t0 = JSON;
              _context.next = 10;
              return _regenerator.default.awrap(response.text());

            case 10:
              _context.t1 = _context.sent;
              res = _context.t0.parse.call(_context.t0, _context.t1);

              if (response.status !== 200) {
                props.onMessageChange("Username or Password Incorrect");
              } else {
                props.onMessageChange("Success");
                global.userId = res.Id;
                global.firstName = res.FirstName;
                global.lastName = res.LastName;
                global.username = global.username_login;
                global.email = res.Email;
                global.phone = res.Phone;
                console.log("ID " + global.userId + "\n" + "First " + global.firstName + "\n" + "Last " + global.lastName + "\n" + "Username " + global.username + "\n" + "Email " + global.email + "\n" + "Phone " + global.phone);
                console.log("Navigate to Dashboard");
                props.navigation.navigate('Dashboard');
              }

              _context.next = 18;
              break;

            case 15:
              _context.prev = 15;
              _context.t2 = _context["catch"](0);
              props.onMessageChange(_context.t2.message);

            case 18:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, [[0, 15]], Promise);
    };

    return _this;
  }

  (0, _createClass2.default)(LoginButtonComponent, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react.default.createElement(_reactNative.TouchableOpacity, {
        style: [styles.container, this.props.style]
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          return _this2.loginClick(_this2.props);
        },
        style: styles.login_Button
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.login_Text
      }, this.props.Login_Text || "Login")));
    }
  }]);
  return LoginButtonComponent;
}(_react.Component);

exports.default = LoginButtonComponent;

var styles = _reactNative.StyleSheet.create({
  container: {},
  login_Button: {
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    position: "absolute",
    backgroundColor: "rgba(15,163,177,1)",
    borderRadius: 50
  },
  login_Text: {
    top: "25%",
    left: 0,
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "rgba(255,255,255,1)",
    fontSize: 16,
    textAlign: "center",
    right: 0
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,