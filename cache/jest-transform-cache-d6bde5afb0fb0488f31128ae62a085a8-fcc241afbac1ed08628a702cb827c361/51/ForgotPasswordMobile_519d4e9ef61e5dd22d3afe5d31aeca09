d262497faeda9d25db6f07b70546af8c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _GoBackButtonComponent = _interopRequireDefault(require("../components/GoBackButtonComponent"));

var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));

var _ResetPassButtonComponent = _interopRequireDefault(require("../components/forgot_password/ResetPassButtonComponent"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_krzudw2ti() {
  var path = "/home/nilanlinux/habit-journal-mobile/screens/ForgotPasswordMobile.js";
  var hash = "dcdbd70060f0a291f2783a0b8396e575259ecefb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/nilanlinux/habit-journal-mobile/screens/ForgotPasswordMobile.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 10
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "1": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "3": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "4": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "5": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "6": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 62
        }
      },
      "7": {
        start: {
          line: 34,
          column: 39
        },
        end: {
          line: 34,
          column: 59
        }
      },
      "8": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "9": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "10": {
        start: {
          line: 40,
          column: 36
        },
        end: {
          line: 40,
          column: 54
        }
      },
      "11": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "12": {
        start: {
          line: 70,
          column: 42
        },
        end: {
          line: 70,
          column: 85
        }
      },
      "13": {
        start: {
          line: 71,
          column: 34
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "14": {
        start: {
          line: 106,
          column: 38
        },
        end: {
          line: 109,
          column: 3
        }
      },
      "15": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 39
        }
      },
      "16": {
        start: {
          line: 112,
          column: 15
        },
        end: {
          line: 265,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 28
          }
        },
        loc: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 59
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 27
          }
        },
        loc: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 40,
            column: 19
          }
        },
        loc: {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 54
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 32
          },
          end: {
            line: 70,
            column: 33
          }
        },
        loc: {
          start: {
            line: 70,
            column: 41
          },
          end: {
            line: 70,
            column: 86
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 23
          },
          end: {
            line: 71,
            column: 24
          }
        },
        loc: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 65
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 106,
            column: 39
          }
        },
        loc: {
          start: {
            line: 107,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 107
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 69
          }
        }, {
          start: {
            line: 69,
            column: 73
          },
          end: {
            line: 69,
            column: 89
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 32
          }
        }, {
          start: {
            line: 92,
            column: 14
          },
          end: {
            line: 96,
            column: 21
          }
        }],
        line: 91
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dcdbd70060f0a291f2783a0b8396e575259ecefb"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_krzudw2ti = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_krzudw2ti();

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ForgotPasswordMobile = function (_Component) {
  (0, _inherits2.default)(ForgotPasswordMobile, _Component);

  var _super = _createSuper(ForgotPasswordMobile);

  function ForgotPasswordMobile() {
    var _this;

    (0, _classCallCheck2.default)(this, ForgotPasswordMobile);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = (cov_krzudw2ti().s[0]++, {
      message: '',
      isEmailValid: true,
      emailSent: false
    });
    _this.handleMessageChange = (cov_krzudw2ti().s[1]++, function (message) {
      cov_krzudw2ti().f[0]++;
      cov_krzudw2ti().s[2]++;

      if (message !== "Success") {
        cov_krzudw2ti().b[0][0]++;
        cov_krzudw2ti().s[3]++;

        _this.setState({
          message: message
        });
      } else {
        cov_krzudw2ti().b[0][1]++;
        cov_krzudw2ti().s[4]++;

        _this.newPasswordInput.clear();
      }
    });
    _this.handleEmailValidChange = (cov_krzudw2ti().s[5]++, function (valid) {
      cov_krzudw2ti().f[1]++;
      cov_krzudw2ti().s[6]++;

      _this.setState(function (_ref) {
        var isEmailValid = _ref.isEmailValid;
        cov_krzudw2ti().f[2]++;
        cov_krzudw2ti().s[7]++;
        return {
          isEmailValid: valid
        };
      });
    });
    _this.handleEmailSentChange = (cov_krzudw2ti().s[8]++, function (isSent) {
      cov_krzudw2ti().f[3]++;
      cov_krzudw2ti().s[9]++;

      _this.setState(function (_ref2) {
        var emailSent = _ref2.emailSent;
        cov_krzudw2ti().f[4]++;
        cov_krzudw2ti().s[10]++;
        return {
          emailSent: isSent
        };
      });
    });
    _this.forgotPasswordEmailChangedHandler = (cov_krzudw2ti().s[14]++, function _callee(val) {
      return _regenerator.default.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cov_krzudw2ti().f[8]++;
              cov_krzudw2ti().s[15]++;
              global.email_forgot_password = val;

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, null, Promise);
    });
    return _this;
  }

  (0, _createClass2.default)(ForgotPasswordMobile, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      cov_krzudw2ti().f[5]++;
      cov_krzudw2ti().s[11]++;
      return _react.default.createElement(_reactNative.View, {
        style: styles.container
      }, _react.default.createElement(_reactNative.ImageBackground, {
        source: require("../assets/images/background3.png"),
        resizeMode: "cover",
        style: styles.background
      }, _react.default.createElement(_GoBackButtonComponent.default, {
        navigation: this.props.navigation,
        style: styles.goBackButtonComponent1
      }), _react.default.createElement(_reactNative.View, {
        style: styles.forgotPassword_ForgotPassword
      }, _react.default.createElement(_reactNative.View, {
        style: styles.forgotPassword_Background
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.header_Forgot
      }, "Forgot Your Password?"), _react.default.createElement(_reactNative.Text, {
        style: styles.prompt_User_Text
      }, " Enter the email linked to your account."), _react.default.createElement(_reactNative.Text, {
        style: styles.text_Incorrect
      }, this.state.message), _react.default.createElement(_reactNative.View, {
        style: styles.email
      }, _react.default.createElement(_reactNative.TextInput, {
        placeholder: "E-Mail",
        style: [styles.emailField, (cov_krzudw2ti().b[1][0]++, !this.state.isEmailValid) && (cov_krzudw2ti().b[1][1]++, styles.incorrect)],
        onChangeText: function onChangeText(val) {
          cov_krzudw2ti().f[6]++;
          cov_krzudw2ti().s[12]++;

          _this2.forgotPasswordEmailChangedHandler(val);
        },
        ref: function ref(input) {
          cov_krzudw2ti().f[7]++;
          cov_krzudw2ti().s[13]++;
          _this2.newPasswordInput = input;
        }
      }), _react.default.createElement(_FontAwesome.default, {
        name: "envelope",
        style: styles.eMailIcon
      })), _react.default.createElement(_ResetPassButtonComponent.default, {
        state: this.state,
        onMessageChange: this.handleMessageChange,
        onEmailValidChange: this.handleEmailValidChange,
        onEmailSentChange: this.handleEmailSentChange,
        style: styles.resetPasswordButtonComponent
      }))), _react.default.createElement(_reactNative.View, {
        style: styles.resetPassword_Verification
      }, (cov_krzudw2ti().b[2][0]++, this.state.emailSent) && (cov_krzudw2ti().b[2][1]++, _react.default.createElement(_reactNative.View, {
        style: styles.resetPassword_VerificationBackground
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.text_verifyEmail
      }, "Password Reset Sent! Check your email."))))));
    }
  }]);
  return ForgotPasswordMobile;
}(_react.Component);

exports.default = ForgotPasswordMobile;
var styles = (cov_krzudw2ti().s[16]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "rgba(255,255,255,1)"
  },
  incorrect: {
    backgroundColor: "rgba(242, 38, 19, 0.1)"
  },
  background: {
    flex: 1,
    justifyContent: "center",
    width: "100%",
    height: "100%"
  },
  goBackButtonComponent1: {
    position: "absolute",
    top: "6.5%",
    right: 24,
    height: 50,
    width: 50
  },
  forgotPassword_ForgotPassword: {
    height: "45%",
    position: "absolute",
    left: 25,
    top: "25%",
    right: 25
  },
  forgotPassword_Background: {
    top: "0%",
    left: 0,
    height: "100%",
    position: "absolute",
    backgroundColor: "rgba(255,255,255,1)",
    borderRadius: 15,
    shadowColor: "rgba(0,0,0,1)",
    shadowOffset: {
      width: 3,
      height: 3
    },
    elevation: 10,
    shadowOpacity: 0.25,
    shadowRadius: 10,
    right: 0,
    borderColor: "rgba(210,210,210,210)",
    borderWidth: 1
  },
  header_Forgot: {
    top: "9.78%",
    position: "absolute",
    fontFamily: "roboto-700",
    color: "rgba(15,163,177,1)",
    fontSize: 28,
    height: 39,
    left: 0,
    textAlign: "center",
    right: 0
  },
  prompt_User_Text: {
    top: "25%",
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    textAlign: "center",
    fontSize: 16,
    left: 23,
    height: 43,
    right: 23
  },
  text_Incorrect: {
    top: "40%",
    left: 0,
    position: "absolute",
    fontFamily: "roboto-700",
    color: "rgba(242, 38, 19, 1)",
    fontSize: 16,
    textAlign: "center",
    right: 0
  },
  email: {
    top: "51%",
    left: "8%",
    height: 41,
    position: "absolute",
    right: "8%"
  },
  emailField: {
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "#121212",
    height: 41,
    borderWidth: 1,
    borderColor: "#000000",
    textAlign: "left",
    backgroundColor: "rgba(255,255,255,1)",
    fontSize: 16,
    top: "0%",
    left: 30,
    borderTopWidth: 0,
    borderRightWidth: 0,
    borderLeftWidth: 0,
    right: 0
  },
  eMailIcon: {
    top: 13,
    left: 0,
    position: "absolute",
    color: "rgba(15,163,177,1)",
    fontSize: 20
  },
  resetPasswordButtonComponent: {
    position: "absolute",
    top: "75%",
    left: 53,
    height: "13.33%",
    right: 53
  },
  resetPassword_Verification: {
    top: "80%",
    height: "6%",
    position: "absolute",
    left: 22,
    right: 22
  },
  resetPassword_VerificationBackground: {
    top: "0%",
    left: 0,
    height: "100%",
    position: "absolute",
    backgroundColor: "rgba(255,255,255,1)",
    borderRadius: 15,
    shadowColor: "rgba(0,0,0,1)",
    shadowOffset: {
      width: 3,
      height: 3
    },
    elevation: 10,
    shadowOpacity: 0.25,
    shadowRadius: 10,
    right: 0,
    borderColor: "rgba(210,210,210,210)",
    borderWidth: 1
  },
  text_verifyEmail: {
    top: "18.74%",
    left: 0,
    position: "absolute",
    fontFamily: "roboto-regular",
    color: "rgba(0,0,0,1)",
    fontSize: 16,
    right: 0,
    textAlign: "center"
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,