{"version":3,"sources":["SignUpButtonComponent.test.js"],"names":["adapter","Adapter","props","beforeEach","test","onEmailSentChange","onMessageChange","onEmailValidChange","onPhoneValidChange","onUsernameValidChange","onPasswordValidChange","describe","it","global","firstName","lastName","username","password","email","phone","wrapper","val","instance","isInputValid","expect","toEqual"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,uBAAU;AAACA,EAAAA,OAAO,EAAG,IAAIC,2BAAJ;AAAX,CAAV;AAEA,IAAIC,KAAJ;AACAC,UAAU,CAAC,YAAM;AACfD,EAAAA,KAAK,GAAG;AACNE,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,iBAAiB,EAAjBA,iBAFM;AAGNC,IAAAA,eAAe,EAAfA,eAHM;AAINC,IAAAA,kBAAkB,EAAlBA,kBAJM;AAKNC,IAAAA,kBAAkB,EAAlBA,kBALM;AAMNC,IAAAA,qBAAqB,EAArBA,qBANM;AAONC,IAAAA,qBAAqB,EAArBA;AAPM,GAAR;AASD,CAVS,CAAV;AAYAC,QAAQ,CAAC,+BAAD,EAAkC,YAAM;AAC9CC,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3CC,IAAAA,MAAM,CAACC,SAAP,GAAmB,EAAnB;AACAD,IAAAA,MAAM,CAACE,QAAP,GAAkB,EAAlB;AACAF,IAAAA,MAAM,CAACG,QAAP,GAAkB,UAAlB;AACAH,IAAAA,MAAM,CAACI,QAAP,GAAkB,UAAlB;AACAJ,IAAAA,MAAM,CAACK,KAAP,GAAe,eAAf;AACAL,IAAAA,MAAM,CAACM,KAAP,GAAe,EAAf;AAEA,QAAMC,OAAO,GAAG,qBAAQ,6BAAC,8BAAD,EAA2BlB,KAA3B,CAAR,CAAhB;AACA,QAAMmB,GAAG,GAAGD,OAAO,CAACE,QAAR,GAAmBC,YAAnB,EAAZ;AACAC,IAAAA,MAAM,CAACH,GAAD,CAAN,CAAYI,OAAZ,CAAoB,IAApB;AACD,GAXC,CAAF;AAYD,CAbO,CAAR","sourcesContent":["import 'react-native';\nimport React from 'react';\nimport * as renderer from 'react-test-renderer';\nimport LoginButtonComponent from \"../components/login/LoginButtonComponent\";\nimport SignUpButtonComponent from \"../components/register/SignUpButtonComponent\";\nimport ResetPassButtonComponent from \"../components/forgot_password/ResetPassButtonComponent\";\nimport { shallow, mount, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({adapter : new Adapter()});\n\nlet props;\nbeforeEach(() => {\n  props = {\n    test: true,\n    onEmailSentChange,\n    onMessageChange,\n    onEmailValidChange,\n    onPhoneValidChange,\n    onUsernameValidChange,\n    onPasswordValidChange\n  };\n});\n\ndescribe('Register Screen Functionality', () => {\n  it('Should return -1 (No user found)', () => {\n    global.firstName = \"\";\n    global.lastName = \"\";\n    global.username = \"username\";\n    global.password = \"password\";\n    global.email = \"test@test.com\";\n    global.phone = \"\";\n\n    const wrapper = shallow(<SignUpButtonComponent {...props} />);\n    const val = wrapper.instance().isInputValid();\n    expect(val).toEqual(true);\n  });\n});"]}