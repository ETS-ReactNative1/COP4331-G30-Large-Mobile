764463ecbd33620fc7007249f92b7cfc
_getJestObj().mock('react-native-vector-icons/FontAwesome');

_getJestObj().mock('react-native-vector-icons/Feather');

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("react-native");

var _react = _interopRequireDefault(require("react"));

var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));

var renderer = _interopRequireWildcard(require("react-test-renderer"));

var _LoginButtonComponent = _interopRequireDefault(require("../components/login/LoginButtonComponent"));

var _SignUpButtonComponent = _interopRequireDefault(require("../components/register/SignUpButtonComponent"));

var _ResetPassButtonComponent = _interopRequireDefault(require("../components/forgot_password/ResetPassButtonComponent"));

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact.default()
});
var props;
beforeEach(function () {
  props = {
    test: true
  };
});
describe('Login Screen Functionality', function () {
  it('Should return -1 (No user found)', function () {
    global.userId = "";
    global.username_login = "";
    global.password_login = "";
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_LoginButtonComponent.default, props));
    wrapper.instance().loginClick();
    expect(global.userId).toEqual("");
  });
  it('Should return -1 (No user found)', function () {
    global.userId = "";
    global.username_login = "";
    global.password_login = "";
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_LoginButtonComponent.default, props));
    wrapper.instance().loginClick();
    expect(global.userId).toEqual("");
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvZ2luQnV0dG9uQ29tcG9uZW50LnRlc3QuanMiXSwibmFtZXMiOlsibW9jayIsImFkYXB0ZXIiLCJBZGFwdGVyIiwicHJvcHMiLCJiZWZvcmVFYWNoIiwidGVzdCIsImRlc2NyaWJlIiwiaXQiLCJnbG9iYWwiLCJ1c2VySWQiLCJ1c2VybmFtZV9sb2dpbiIsInBhc3N3b3JkX2xvZ2luIiwid3JhcHBlciIsImluc3RhbmNlIiwibG9naW5DbGljayIsImV4cGVjdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiJBQVlBLGNBQUtBLElBQUwsQ0FBVSx1Q0FBVjs7QUFDQSxjQUFLQSxJQUFMLENBQVUsbUNBQVY7Ozs7QUFiQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSx1QkFBVTtBQUFDQyxFQUFBQSxPQUFPLEVBQUcsSUFBSUMsMkJBQUo7QUFBWCxDQUFWO0FBS0EsSUFBSUMsS0FBSjtBQUNBQyxVQUFVLENBQUMsWUFBTTtBQUNmRCxFQUFBQSxLQUFLLEdBQUc7QUFDTkUsSUFBQUEsSUFBSSxFQUFFO0FBREEsR0FBUjtBQUdELENBSlMsQ0FBVjtBQU1BQyxRQUFRLENBQUMsNEJBQUQsRUFBK0IsWUFBTTtBQUMzQ0MsRUFBQUEsRUFBRSxDQUFDLGtDQUFELEVBQXFDLFlBQU07QUFDM0NDLElBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixFQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNFLGNBQVAsR0FBd0IsRUFBeEI7QUFDQUYsSUFBQUEsTUFBTSxDQUFDRyxjQUFQLEdBQXdCLEVBQXhCO0FBRUEsUUFBTUMsT0FBTyxHQUFHLHFCQUFRLDZCQUFDLDZCQUFELEVBQTBCVCxLQUExQixDQUFSLENBQWhCO0FBQ0FTLElBQUFBLE9BQU8sQ0FBQ0MsUUFBUixHQUFtQkMsVUFBbkI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNDLE1BQVIsQ0FBTixDQUFzQk8sT0FBdEIsQ0FBOEIsRUFBOUI7QUFDRCxHQVJDLENBQUY7QUFVQVQsRUFBQUEsRUFBRSxDQUFDLGtDQUFELEVBQXFDLFlBQU07QUFDM0NDLElBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixFQUFoQjtBQUNBRCxJQUFBQSxNQUFNLENBQUNFLGNBQVAsR0FBd0IsRUFBeEI7QUFDQUYsSUFBQUEsTUFBTSxDQUFDRyxjQUFQLEdBQXdCLEVBQXhCO0FBRUEsUUFBTUMsT0FBTyxHQUFHLHFCQUFRLDZCQUFDLDZCQUFELEVBQTBCVCxLQUExQixDQUFSLENBQWhCO0FBQ0FTLElBQUFBLE9BQU8sQ0FBQ0MsUUFBUixHQUFtQkMsVUFBbkI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDUCxNQUFNLENBQUNDLE1BQVIsQ0FBTixDQUFzQk8sT0FBdEIsQ0FBOEIsRUFBOUI7QUFDRCxHQVJDLENBQUY7QUFTRCxDQXBCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBGb250QXdlc29tZUljb24gZnJvbSBcInJlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvRm9udEF3ZXNvbWVcIjtcbmltcG9ydCAqIGFzIHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IExvZ2luQnV0dG9uQ29tcG9uZW50IGZyb20gXCIuLi9jb21wb25lbnRzL2xvZ2luL0xvZ2luQnV0dG9uQ29tcG9uZW50XCI7XG5pbXBvcnQgU2lnblVwQnV0dG9uQ29tcG9uZW50IGZyb20gXCIuLi9jb21wb25lbnRzL3JlZ2lzdGVyL1NpZ25VcEJ1dHRvbkNvbXBvbmVudFwiO1xuaW1wb3J0IFJlc2V0UGFzc0J1dHRvbkNvbXBvbmVudCBmcm9tIFwiLi4vY29tcG9uZW50cy9mb3Jnb3RfcGFzc3dvcmQvUmVzZXRQYXNzQnV0dG9uQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBzaGFsbG93LCBtb3VudCwgY29uZmlndXJlIH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBBZGFwdGVyIGZyb20gJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2JztcblxuY29uZmlndXJlKHthZGFwdGVyIDogbmV3IEFkYXB0ZXIoKX0pO1xuXG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvRm9udEF3ZXNvbWUnKTtcbmplc3QubW9jaygncmVhY3QtbmF0aXZlLXZlY3Rvci1pY29ucy9GZWF0aGVyJyk7XG5cbmxldCBwcm9wcztcbmJlZm9yZUVhY2goKCkgPT4ge1xuICBwcm9wcyA9IHtcbiAgICB0ZXN0OiB0cnVlXG4gIH07XG59KTtcblxuZGVzY3JpYmUoJ0xvZ2luIFNjcmVlbiBGdW5jdGlvbmFsaXR5JywgKCkgPT4ge1xuICBpdCgnU2hvdWxkIHJldHVybiAtMSAoTm8gdXNlciBmb3VuZCknLCAoKSA9PiB7XG4gICAgZ2xvYmFsLnVzZXJJZCA9IFwiXCI7XG4gICAgZ2xvYmFsLnVzZXJuYW1lX2xvZ2luID0gXCJcIjtcbiAgICBnbG9iYWwucGFzc3dvcmRfbG9naW4gPSBcIlwiO1xuXG4gICAgY29uc3Qgd3JhcHBlciA9IHNoYWxsb3coPExvZ2luQnV0dG9uQ29tcG9uZW50IHsuLi5wcm9wc30gLz4pO1xuICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5sb2dpbkNsaWNrKClcbiAgICBleHBlY3QoZ2xvYmFsLnVzZXJJZCkudG9FcXVhbChcIlwiKTtcbiAgfSk7XG5cbiAgaXQoJ1Nob3VsZCByZXR1cm4gLTEgKE5vIHVzZXIgZm91bmQpJywgKCkgPT4ge1xuICAgIGdsb2JhbC51c2VySWQgPSBcIlwiO1xuICAgIGdsb2JhbC51c2VybmFtZV9sb2dpbiA9IFwiXCI7XG4gICAgZ2xvYmFsLnBhc3N3b3JkX2xvZ2luID0gXCJcIjtcblxuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93KDxMb2dpbkJ1dHRvbkNvbXBvbmVudCB7Li4ucHJvcHN9IC8+KTtcbiAgICB3cmFwcGVyLmluc3RhbmNlKCkubG9naW5DbGljaygpXG4gICAgZXhwZWN0KGdsb2JhbC51c2VySWQpLnRvRXF1YWwoXCJcIik7XG4gIH0pO1xufSk7XG5cblxuLypcbmRlc2NyaWJlKCdTY3JlZW4gVGVzdHMnLCAoKSA9PiB7XG5cbiAgaXQoJ0ZvcmdvdCBwYXNzd29yZCByZW5kZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKFxuICAgICAgPEZvcmdvdFBhc3N3b3JkTW9iaWxlIC8+XG4gICAgICApLnRvSlNPTigpO1xuICAgIGV4cGVjdCh0cmVlKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG5cblxuICBpdCgnUmVnaXN0ZXIgcmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3QgdHJlZSA9IHJlbmRlcmVyLmNyZWF0ZShcbiAgICAgIDxSZWdpc3Rlck1vYmlsZSAvPlxuICAgICAgKS50b0pTT04oKTtcbiAgICBleHBlY3QodHJlZSkudG9NYXRjaFNuYXBzaG90KCk7XG4gIH0pO1xuXG4vL2ltcG9ydCBGb250QXdlc29tZUljb24gZnJvbSBcInJlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvRm9udEF3ZXNvbWVcIjtcbiAgaXQoJ0xvZ2luIHJlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoXG4gICAgICA8TG9naW5Nb2JpbGUgLz5cbiAgICAgICkudG9KU09OKCk7XG4gICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcbn0pO1xuKi9cbi8qXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgcmVuZGVyZXIgZnJvbSBcInJlYWN0LXRlc3QtcmVuZGVyZXJcIjtcbi8vaW1wb3J0IEFwcCBmcm9tIFwiLi4vQXBwLmpzXCJcbmltcG9ydCBMb2dpbk1vYmlsZSBmcm9tICcuLi9zY3JlZW5zL0xvZ2luTW9iaWxlJztcblxuZGVzY3JpYmUoXCI8TG9naW5Nb2JpbGUgLz5cIiwgKCkgPT4ge1xuICAgIGl0KCdoYXMgMSBjaGlsZCcsICgpID0+IHtcbiAgICAgICAgY29uc3QgdHJlZSA9IHJlbmRlcmVyLmNyZWF0ZSg8TG9naW5Nb2JpbGUgLz4pLnRvSlNPTigpO1xuICAgICAgICBleHBlY3QodHJlZS5jaGlsZHJlbi5sZW5ndGgpLnRvQmUoMSk7XG4gICAgfSk7XG59KTsqLyJdfQ==