{"version":3,"sources":["ResetPassButtonComponent.js"],"names":["ResetPasswordButtonComponent","resetPasswordClick","props","onEmailValidChange","obj","email","global","email_forgot_password","trim","js","JSON","stringify","fetch","method","body","headers","response","console","log","status","onMessageChange","onEmailSentChange","message","styles","container","style","reset_Button","reset_Text","Component","StyleSheet","create","top","height","position","backgroundColor","borderRadius","left","width","fontFamily","color","fontSize","textAlign","right"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,4B;;;;;;;;;;;;;;;;UAcnBC,kB,GAAqB,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIjBA,cAAAA,KAAK,CAACC,kBAAN,CAAyB,IAAzB;AAGIC,cAAAA,GAPa,GAOP;AAACC,gBAAAA,KAAK,EAACC,MAAM,CAACC,qBAAP,CAA6BC,IAA7B;AAAP,eAPO;AAUbC,cAAAA,EAVa,GAURC,IAAI,CAACC,SAAL,CAAeP,GAAf,CAVQ;AAAA;AAAA,gDAWMQ,KAAK,CAAC,wDAAD,EAC5B;AAACC,gBAAAA,MAAM,EAAC,MAAR;AAAeC,gBAAAA,IAAI,EAACL,EAApB;AAAuBM,gBAAAA,OAAO,EAAC;AAAC,kCAAgB;AAAjB;AAA/B,eAD4B,CAXX;;AAAA;AAWXC,cAAAA,QAXW;AAejBC,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BF,QAAQ,CAACG,MAAhD;;AAEA,kBAAIH,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EACA;AACEjB,gBAAAA,KAAK,CAACkB,eAAN,CAAsB,iCAAtB;AACAlB,gBAAAA,KAAK,CAACC,kBAAN,CAAyB,KAAzB;AACD,eAJD,MAKK,IAAIa,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EACL;AACEjB,gBAAAA,KAAK,CAACkB,eAAN,CAAsB,SAAtB;AACAlB,gBAAAA,KAAK,CAACC,kBAAN,CAAyB,IAAzB;AACAD,gBAAAA,KAAK,CAACmB,iBAAN,CAAwB,IAAxB;AACAf,gBAAAA,MAAM,CAACC,qBAAP,GAA+B,EAA/B;AACD;;AA5BgB;AAAA;;AAAA;AAAA;AAAA;AAgCjBL,cAAAA,KAAK,CAACkB,eAAN,CAAsB,YAAEE,OAAxB;;AAhCiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAbrB,kBAAS;AAAA;;AACP,aACE,6BAAC,6BAAD;AAAkB,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKtB,KAAL,CAAWuB,KAA9B;AAAzB,SACE,6BAAC,6BAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACxB,kBAAL,CAAwB,MAAI,CAACC,KAA7B,CAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAEqB,MAAM,CAACG;AAFhB,SAIE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,0BAJF,CADF,CADF;AAUD;;;EAZuDC,gB;;;;AAoD1D,IAAML,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE,EADoB;AAE/BE,EAAAA,YAAY,EAAE;AACZK,IAAAA,GAAG,EAAE,IADO;AAEZC,IAAAA,MAAM,EAAE,MAFI;AAGZC,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,eAAe,EAAE,oBAJL;AAKZC,IAAAA,YAAY,EAAE,EALF;AAMZC,IAAAA,IAAI,EAAE,CANM;AAOZC,IAAAA,KAAK,EAAE;AAPK,GAFiB;AAW/BV,EAAAA,UAAU,EAAE;AACVI,IAAAA,GAAG,EAAE,KADK;AAEVK,IAAAA,IAAI,EAAE,CAFI;AAGVH,IAAAA,QAAQ,EAAE,UAHA;AAIVK,IAAAA,UAAU,EAAE,gBAJF;AAKVC,IAAAA,KAAK,EAAE,qBALG;AAMVC,IAAAA,QAAQ,EAAE,EANA;AAOVC,IAAAA,SAAS,EAAE,QAPD;AAQVC,IAAAA,KAAK,EAAE;AARG;AAXmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, TouchableOpacity, Text } from \"react-native\";\n\nexport default class ResetPasswordButtonComponent extends Component {\n  render() {\n    return (\n      <TouchableOpacity style={[styles.container, this.props.style]}>\n        <TouchableOpacity\n          onPress={() => this.resetPasswordClick(this.props)}\n          style={styles.reset_Button}\n        >\n          <Text style={styles.reset_Text}>Reset Password</Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n\n  resetPasswordClick = async (props) =>\n  {\n    try\n    {\n      props.onEmailValidChange(true);\n\n      // Get typed username and password\n      var obj = {email:global.email_forgot_password.trim()}; \n\n      // Request user info\n      var js = JSON.stringify(obj); \n      const response = await fetch('https://cop4331-g30-large.herokuapp.com/api/forgotpass', \n      {method:'POST',body:js,headers:{'Content-Type': 'application/json'}}); \n      //var res = JSON.parse(await response.text());\n\n      console.log(\"Reset endpoint pinged \" + response.status);\n\n      if (response.status === 400)\n      {\n        props.onMessageChange(\"No account found for this email\");\n        props.onEmailValidChange(false);\n      }\n      else if (response.status === 200)\n      {\n        props.onMessageChange(\"Success\");\n        props.onEmailValidChange(true);\n        props.onEmailSentChange(true);\n        global.email_forgot_password = \"\";\n      }\n    }\n    catch(e)\n    {\n      props.onMessageChange(e.message); \n    }\n\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  reset_Button: {\n    top: \"0%\",\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \"rgba(15,163,177,1)\",\n    borderRadius: 50,\n    left: 0,\n    width: \"100%\"\n  },\n  reset_Text: {\n    top: \"25%\",\n    left: 0,\n    position: \"absolute\",\n    fontFamily: \"roboto-regular\",\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16,\n    textAlign: \"center\",\n    right: 0\n  }\n});\n"]}