{"version":3,"sources":["LoginButtonComponent.js"],"names":["LoginButtonComponent","loginClick","props","obj","username","global","username_login","trim","password","password_login","onMessageChange","js","JSON","stringify","fetch","method","body","headers","response","text","res","parse","status","userId","Id","firstName","FirstName","lastName","LastName","email","Email","phone","Phone","console","log","navigation","navigate","message","styles","container","style","login_Button","login_Text","Login_Text","Component","StyleSheet","create","top","left","width","height","position","backgroundColor","borderRadius","fontFamily","color","fontSize","textAlign","right"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, TouchableOpacity, Text } from \"react-native\";\nimport { createStackNavigator, createAppContainer } from 'react-navigation'; \n\nexport default class LoginButtonComponent extends Component {\n  render() {\n    return (\n      <TouchableOpacity style={[styles.container, this.props.style]}>\n        <TouchableOpacity\n          onPress = {() => this.loginClick(this.props)}\n          style={styles.login_Button}\n        >\n          <Text style={styles.login_Text}>{this.props.Login_Text || \"Login\"}</Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    )\n  }\n\n  loginClick = async (props) =>\n  {\n    try \n    {\n      // Get typed username and password\n      var obj = {username:global.username_login.trim(),password:global.password_login.trim()}; \n\n      props.onMessageChange(\"\");\n\n      // Request user info\n      var js = JSON.stringify(obj); \n      const response = await fetch('https://cop4331-g30-large.herokuapp.com/api/login', \n      {method:'POST',body:js,headers:{'Content-Type': 'application/json'}}); \n      var res = JSON.parse(await response.text());\n\n      // If no user found\n      if (response.status !== 200)\n      { \n        // Change message on login screen\n        props.onMessageChange(\"Username or Password Incorrect\");\n      } \n      else \n      {\n        props.onMessageChange(\"Success\");\n\n        global.userId = res.Id;\n        global.firstName = res.FirstName;\n        global.lastName = res.LastName;\n        global.username = global.username_login;\n        global.email = res.Email;\n        //console.log(res.email);\n        global.phone = res.Phone;\n\n        console.log(\n          \"ID \" + global.userId + \"\\n\" +\n          \"First \" + global.firstName + \"\\n\" +\n          \"Last \" + global.lastName + \"\\n\" +\n          \"Username \" + global.username + \"\\n\" +\n          \"Email \" + global.email + \"\\n\" +\n          \"Phone \" + global.phone\n        );\n\n        // Navigate to dashboard\n        console.log(\"Navigate to Dashboard\");\n        props.navigation.navigate('Dashboard');\n      } \n    } \n    catch(e) \n    {\n      props.onMessageChange(e.message); \n    }\n\n    //global.password = \"\";\n    //global.username = \"\";\n  }\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {},\n  login_Button: {\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: \"rgba(15,163,177,1)\",\n    borderRadius: 50\n  },\n  login_Text: {\n    top: \"25%\",\n    left: 0,\n    position: \"absolute\",\n    fontFamily: \"roboto-regular\",\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16,\n    textAlign: \"center\",\n    right: 0\n  }\n});\n"]}