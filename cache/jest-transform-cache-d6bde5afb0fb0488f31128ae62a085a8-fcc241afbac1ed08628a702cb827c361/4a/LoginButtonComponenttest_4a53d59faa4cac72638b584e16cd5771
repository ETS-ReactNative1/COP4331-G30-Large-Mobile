12e107b1a343ca225d817d167810b5ad
_getJestObj().mock('react-native-vector-icons/FontAwesome');

_getJestObj().mock('react-native-vector-icons/Feather');

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

require("react-native");

var _react = _interopRequireDefault(require("react"));

var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));

var renderer = _interopRequireWildcard(require("react-test-renderer"));

var _LoginButtonComponent = _interopRequireDefault(require("../components/login/LoginButtonComponent"));

var _SignUpButtonComponent = _interopRequireDefault(require("../components/register/SignUpButtonComponent"));

var _ResetPassButtonComponent = _interopRequireDefault(require("../components/forgot_password/ResetPassButtonComponent"));

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact.default()
});
var props;
beforeEach(function () {
  props = {
    test: true,
    onMessageChange: function onMessageChange(val) {}
  };
});
describe('Login Screen Functionality', function () {
  global.userId = "1";
  global.username_login = "Test";
  global.password_login = "Password";
  it('Should return -1 (No user found)', function _callee() {
    var wrapper;
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            wrapper = (0, _enzyme.shallow)(_react.default.createElement(_LoginButtonComponent.default, props));
            wrapper.instance().loginClick(props).then(function () {
              expect(global.userId).toEqual("");
            });

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvZ2luQnV0dG9uQ29tcG9uZW50LnRlc3QuanMiXSwibmFtZXMiOlsibW9jayIsImFkYXB0ZXIiLCJBZGFwdGVyIiwicHJvcHMiLCJiZWZvcmVFYWNoIiwidGVzdCIsIm9uTWVzc2FnZUNoYW5nZSIsInZhbCIsImRlc2NyaWJlIiwiZ2xvYmFsIiwidXNlcklkIiwidXNlcm5hbWVfbG9naW4iLCJwYXNzd29yZF9sb2dpbiIsIml0Iiwid3JhcHBlciIsImluc3RhbmNlIiwibG9naW5DbGljayIsInRoZW4iLCJleHBlY3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiQUFZQSxjQUFLQSxJQUFMLENBQVUsdUNBQVY7O0FBQ0EsY0FBS0EsSUFBTCxDQUFVLG1DQUFWOzs7Ozs7QUFiQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSx1QkFBVTtBQUFDQyxFQUFBQSxPQUFPLEVBQUcsSUFBSUMsMkJBQUo7QUFBWCxDQUFWO0FBS0EsSUFBSUMsS0FBSjtBQUNBQyxVQUFVLENBQUMsWUFBTTtBQUNmRCxFQUFBQSxLQUFLLEdBQUc7QUFDTkUsSUFBQUEsSUFBSSxFQUFFLElBREE7QUFFTkMsSUFBQUEsZUFBZSxFQUFFLHlCQUFTQyxHQUFULEVBQWMsQ0FBRTtBQUYzQixHQUFSO0FBSUQsQ0FMUyxDQUFWO0FBT0FDLFFBQVEsQ0FBQyw0QkFBRCxFQUErQixZQUFNO0FBQzNDQyxFQUFBQSxNQUFNLENBQUNDLE1BQVAsR0FBZ0IsR0FBaEI7QUFDQUQsRUFBQUEsTUFBTSxDQUFDRSxjQUFQLEdBQXdCLE1BQXhCO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0csY0FBUCxHQUF3QixVQUF4QjtBQUVBQyxFQUFBQSxFQUFFLENBQUMsa0NBQUQsRUFBcUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQy9CQyxZQUFBQSxPQUQrQixHQUNyQixxQkFBUSw2QkFBQyw2QkFBRCxFQUEwQlgsS0FBMUIsQ0FBUixDQURxQjtBQUdyQ1csWUFBQUEsT0FBTyxDQUFDQyxRQUFSLEdBQW1CQyxVQUFuQixDQUE4QmIsS0FBOUIsRUFBcUNjLElBQXJDLENBQTBDLFlBQU07QUFDOUNDLGNBQUFBLE1BQU0sQ0FBQ1QsTUFBTSxDQUFDQyxNQUFSLENBQU4sQ0FBc0JTLE9BQXRCLENBQThCLEVBQTlCO0FBQ0QsYUFGRDs7QUFIcUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBckMsQ0FBRjtBQU9ELENBWk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRm9udEF3ZXNvbWVJY29uIGZyb20gXCJyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL0ZvbnRBd2Vzb21lXCI7XG5pbXBvcnQgKiBhcyByZW5kZXJlciBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcbmltcG9ydCBMb2dpbkJ1dHRvbkNvbXBvbmVudCBmcm9tIFwiLi4vY29tcG9uZW50cy9sb2dpbi9Mb2dpbkJ1dHRvbkNvbXBvbmVudFwiO1xuaW1wb3J0IFNpZ25VcEJ1dHRvbkNvbXBvbmVudCBmcm9tIFwiLi4vY29tcG9uZW50cy9yZWdpc3Rlci9TaWduVXBCdXR0b25Db21wb25lbnRcIjtcbmltcG9ydCBSZXNldFBhc3NCdXR0b25Db21wb25lbnQgZnJvbSBcIi4uL2NvbXBvbmVudHMvZm9yZ290X3Bhc3N3b3JkL1Jlc2V0UGFzc0J1dHRvbkNvbXBvbmVudFwiO1xuaW1wb3J0IHsgc2hhbGxvdywgbW91bnQsIGNvbmZpZ3VyZSB9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQgQWRhcHRlciBmcm9tICdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNic7XG5cbmNvbmZpZ3VyZSh7YWRhcHRlciA6IG5ldyBBZGFwdGVyKCl9KTtcblxuamVzdC5tb2NrKCdyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL0ZvbnRBd2Vzb21lJyk7XG5qZXN0Lm1vY2soJ3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvRmVhdGhlcicpO1xuXG5sZXQgcHJvcHM7XG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgcHJvcHMgPSB7XG4gICAgdGVzdDogdHJ1ZSxcbiAgICBvbk1lc3NhZ2VDaGFuZ2U6IGZ1bmN0aW9uKHZhbCkge30sXG4gIH07XG59KTtcblxuZGVzY3JpYmUoJ0xvZ2luIFNjcmVlbiBGdW5jdGlvbmFsaXR5JywgKCkgPT4ge1xuICBnbG9iYWwudXNlcklkID0gXCIxXCI7XG4gIGdsb2JhbC51c2VybmFtZV9sb2dpbiA9IFwiVGVzdFwiO1xuICBnbG9iYWwucGFzc3dvcmRfbG9naW4gPSBcIlBhc3N3b3JkXCI7XG5cbiAgaXQoJ1Nob3VsZCByZXR1cm4gLTEgKE5vIHVzZXIgZm91bmQpJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93KDxMb2dpbkJ1dHRvbkNvbXBvbmVudCB7Li4ucHJvcHN9IC8+KTtcbiAgICAvL2F3YWl0IHdyYXBwZXIuaW5zdGFuY2UoKS5sb2dpbkNsaWNrKHByb3BzKVxuICAgIHdyYXBwZXIuaW5zdGFuY2UoKS5sb2dpbkNsaWNrKHByb3BzKS50aGVuKCgpID0+IHtcbiAgICAgIGV4cGVjdChnbG9iYWwudXNlcklkKS50b0VxdWFsKFwiXCIpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuXG5cbi8qXG5kZXNjcmliZSgnU2NyZWVuIFRlc3RzJywgKCkgPT4ge1xuXG4gIGl0KCdGb3Jnb3QgcGFzc3dvcmQgcmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3QgdHJlZSA9IHJlbmRlcmVyLmNyZWF0ZShcbiAgICAgIDxGb3Jnb3RQYXNzd29yZE1vYmlsZSAvPlxuICAgICAgKS50b0pTT04oKTtcbiAgICBleHBlY3QodHJlZSkudG9NYXRjaFNuYXBzaG90KCk7XG4gIH0pO1xuXG5cbiAgaXQoJ1JlZ2lzdGVyIHJlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoXG4gICAgICA8UmVnaXN0ZXJNb2JpbGUgLz5cbiAgICAgICkudG9KU09OKCk7XG4gICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcblxuLy9pbXBvcnQgRm9udEF3ZXNvbWVJY29uIGZyb20gXCJyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL0ZvbnRBd2Vzb21lXCI7XG4gIGl0KCdMb2dpbiByZW5kZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKFxuICAgICAgPExvZ2luTW9iaWxlIC8+XG4gICAgICApLnRvSlNPTigpO1xuICAgIGV4cGVjdCh0cmVlKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG59KTtcbiovXG4vKlxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHJlbmRlcmVyIGZyb20gXCJyZWFjdC10ZXN0LXJlbmRlcmVyXCI7XG4vL2ltcG9ydCBBcHAgZnJvbSBcIi4uL0FwcC5qc1wiXG5pbXBvcnQgTG9naW5Nb2JpbGUgZnJvbSAnLi4vc2NyZWVucy9Mb2dpbk1vYmlsZSc7XG5cbmRlc2NyaWJlKFwiPExvZ2luTW9iaWxlIC8+XCIsICgpID0+IHtcbiAgICBpdCgnaGFzIDEgY2hpbGQnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoPExvZ2luTW9iaWxlIC8+KS50b0pTT04oKTtcbiAgICAgICAgZXhwZWN0KHRyZWUuY2hpbGRyZW4ubGVuZ3RoKS50b0JlKDEpO1xuICAgIH0pO1xufSk7Ki8iXX0=